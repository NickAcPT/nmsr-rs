name: Rust

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    
    # Ensure rustfmt is installed and setup problem matcher
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        rustflags: ""
    
    - name: Build
      run: cargo build --bin=nmsr-aas --package=nmsr-aas --verbose
      
    - name: Build (ears features)
      run: cargo build --bin=nmsr-aas --package=nmsr-aas --features=ears --verbose
      
    - name: Run tests
      run: cargo test --verbose

  release_mac_build:
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    strategy:
      matrix:
        build: [ "macos-arm", "macos-x86" ]
        include:
          - build: "macos-arm"
            os: macos-latest
            target: "aarch64-apple-darwin"
          - build: "macos-x86"
            os: macos-latest
            target: "x86_64-apple-darwin"
      
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: ""
          target: ${{ matrix.target }}
          
      - name: Build
        run: cargo build --release --bin=nmsr-aas --package=nmsr-aas --features=ears --verbose
        
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: nmsr-aas-${{ matrix.build }}
          path: target/${{ matrix.target }}/release/nmsr-aas