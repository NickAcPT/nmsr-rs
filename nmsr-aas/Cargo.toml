[package]
name = "nmsr-aas"
version = "0.1.2"
edition = "2021"
build = "build.rs"

[dependencies]
nmsr-lib = { path = "../nmsr-lib", features = ["parallel_iters"] }
image = { version = "0.24.6", features = ["png"], default-features = false }

serde = { version = "1.0.163", features = ["derive"] }
serde_json = "1.0.96"
rayon = { version = "1.7.0", optional = true }
bincode = "1.3.3"

base64 = "0.21.2"

actix-web = { version = "4.3.1", features = ["rustls"] }
actix-cors = "0.6.4"
reqwest = { version = "0.11.18", features = ["json", "rustls-tls"], default-features = false }

reqwest-middleware = "0.2.2"
reqwest-tracing = "0.4.5"

rustls = "0.20.8"
rustls-pemfile = "1.0.3"

uuid = "1.4.1"
thiserror = "1.0.43"

parking_lot = "0.12.1"

strum = { version = "0.25.0", features = ["derive"] }

walkdir = "2.3.3"

clap = { version = "4.3.15", features = ["derive"] }
toml = "0.7.6"

governor = "0.6.0"

xxhash-rust = { version = "0.8.6", features = ["xxh3"] }

# Tracing for the win!
tracing = { version = "0.1.37" }
# Allows logging to console
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }
# Allows tracing of actix-web
tracing-actix-web = { version = "0.7.5", optional = true, features = ["opentelemetry_0_19"] }
# Allows tracing to opentelemetry
tracing-opentelemetry = { version = "0.19.0", optional = true }
opentelemetry = { version = "0.19.0", optional = true, features = ["rt-tokio-current-thread"] }
opentelemetry-otlp = { version = "*", optional = true, features = ["tls-roots"] }
futures-util = { version = "0.3.28", optional = true }

[features]
lazy_parts = ["nmsr-lib/serializable_parts", "rayon"]
ears = ["nmsr-lib/ears"]
tracing = ["dep:tracing-actix-web", "dep:tracing-opentelemetry", "dep:opentelemetry", "dep:opentelemetry-otlp", "reqwest-tracing/opentelemetry_0_19", "dep:futures-util"]

[build-dependencies]
vergen = { version = "8.2.1", default-features = false, features = ["git", "gitcl"] }

[dev-dependencies]
criterion = { version = "0.5.1", features = ["html_reports"] }
vfs = { version = "0.9.0", features = ["embedded-fs"] }
rust-embed = "6.3.0"

[[bench]]
name = "render"
harness = false
